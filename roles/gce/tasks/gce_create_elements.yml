- name: create disk
  gcp_compute_disk:
      name: "{{ gce_scope }}-disk-{{ item }}"
      size_gb: 50
      source_image: 'https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/rhel-7-v20180716'
      zone: "{{ gce_zone }}"
      project: "{{ gce_project_id }}"
      auth_kind: serviceaccount
      service_account_file: "{{ gcp_cred_file.path }}"
      scopes:
        - https://www.googleapis.com/auth/compute
      state: present
  register: gcp_disk

- name: reserve addresse
  gcp_compute_address:
    name: "{{ gce_scope }}-address-{{ item }}"
    region: "{{ gce_region }}"
    project: "{{ gce_project_id }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_cred_file.path }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: gcp_ip

- name: create instance
  gce:
    instance_names: "{{ gce_scope }}-{{ item }}"
    zone: "{{ gce_zone }}"
    machine_type: "{{ gce_machine_type }}"
    state: present
    disks:
      - name: "{{ gce_scope }}-disk-{{ item }}"
        mode: READ_WRITE
    disk_auto_delete: true
    network: "{{ gce_scope }}-network"
    service_account_permissions:
      - storage-full
    service_account_email: "{{ lookup('ENV', 'gce_client_email') }}"
    credentials_file: "{{ gcp_cred_file.path }}"
    project_id: "{{ gce_project_id }}"


# - name: create instances
#   gcp_compute_instance:
#     name: "{{ gce_scope }}-{{ item }}"
#     machine_type: n1-standard-1
#     disks:
#       - auto_delete: true
#         boot: true
#         source: "{{ gcp_disk }}"
#     metadata:
#       unit: "{{ gce_scope }}"
#     network_interfaces:
#         - network: "{{ network }}"
#           access_configs:
#             - name: 'External NAT'
#               nat_ip: "{{  gcp_ip }}"
#               type: 'ONE_TO_ONE_NAT'
#     zone: "{{ gce_zone }}"
#     project: "{{ gce_project_id }}"
#     auth_kind: serviceaccount
#     service_account_file: "{{ gcp_cred_file.path }}"
#     # service_accounts: 
#     #   - "{{ lookup('ENV', 'gce_client_email') }}"
#     scopes:
#       - https://www.googleapis.com/auth/compute
#     state: present

- name: Check if instance in IG
  shell: |
    gcloud auth activate-service-account --key-file "{{ gcp_cred_file.path }}"
    gcloud compute instance-groups unmanaged list-instances "{{ gce_scope }}-ig" \
      --project "{{ gce_project_id }}" \  
      --zone "{{ gce_zone }}" | grep -c "{{ gce_scope }}-{{ item }}" | cat
  delegate_to: localhost
  ignore_errors: yes
  register: ig_state

- debug:
    var: ig_state.stdout

- name: Add instance to IG
  shell: |
    gcloud compute instance-groups unmanaged add-instances "{{ gce_scope }}-ig" \
      --instances="{{ gce_scope }}-{{ item }}" \
      --project "{{ gce_project_id }}" \  
      --zone "{{ gce_zone }}"
  delegate_to: localhost
  ignore_errors: yes
  when: ig_state.stdout == "0"
