- name: create temporary directory to get app
  tempfile:
    state: directory
    suffix: app
  register: r_tempfile
  delegate_to: localhost
  run_once: yes
  become: no

- name: git clone the app
  git:
    repo: "{{ app }}"
    version: "{{ version }}"
    dest: "{{ r_tempfile.path }}"
    depth: 1
  delegate_to: localhost
  run_once: yes
  become: no

- name: Remove git history  
  file:
    path: "{{ r_tempfile.path }}/.git"
    state: absent
  delegate_to: localhost
  run_once: yes
  become: no

- name: copy model from s3
  get_url:
    url: "{{ bucket }}/model-{{ version }}.model"
    dest: "{{ r_tempfile.path }}/app/model/model.model"
    force: yes
  delegate_to: localhost
  run_once: yes
  become: no

- name: zip the app
  archive:
    path: "{{ r_tempfile.path }}/*"
    dest: "{{ r_tempfile.path }}/app.zip"
    format: zip
  delegate_to: localhost
  run_once: yes
  become: no

# - name: copy zip to nodes 
#   copy:
#     src: "{{ r_tempfile.path }}/app.zip" 
#     dest: /app/
#   become: yes

- name: create app directory 
  file:
    path: /app
    state: directory
    mode: 0755

- name: unzip app on target
  unarchive:
    src: "{{ r_tempfile.path }}/app.zip"
    dest: /app
  become: yes

- name: pip install requirements
  pip:
    requirements: /app/requirements.txt
    extra_args: --no-cache-dir
  become: yes

- name: start gunicorn
  command: nohup gunicorn -b 0.0.0.0:80 app:app &
  args:
    chdir: /app/app
  async: 1000
  poll: 0 
  become: yes
 




