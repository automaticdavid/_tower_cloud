---

- name: App Upgrade
  hosts: "*{{ scope }}"
  gather_facts: yes
  serial: 1
  
  tasks:

    - name: Get list of relevant EC2 IDs
      set_fact: 
        list_of_all_ids: "{{ groups['tag_Name_' + scope ]|map('extract', hostvars, 'ec2_id')|list }}"
      run_once: yes
      delegate_to: localhost

    - name: Build the list of all instances id and ports
      vars:
        all_ids_and_ports: []
      set_fact:
        all_ids_and_ports: "{{ all_ids_and_ports +  [ {'Id': item, 'Port': 80} ] }}"
      with_items: "{{ list_of_all_ids }}"
      run_once: yes
      delegate_to: localhost

    - name: Remove current upgraded ID from list of EC2 IDs
      set_fact: 
        list_of_ids: "{{ list_of_all_ids | difference([ec2_id]) }}"
      delegate_to: localhost

    - name: Build the rolling upgrade list of instances id and ports
      vars:
        ids_and_ports: []
      set_fact:
        ids_and_ports: "{{ ids_and_ports +  [ {'Id': item, 'Port': 80} ] }}"
      with_items: "{{ list_of_ids }}"
      delegate_to: localhost

    - name: Remove {{ ec2_id }} from Target Group
      elb_target_group:
        name: "{{ ec2_lb_target }}"
        protocol: http
        port: 80
        vpc_id: "{{ ec2_vpc }}"
        region:  "{{ ec2_region }}"
        modify_targets: Yes
        state: present
        target_type: instance
        targets: "{{ ids_and_ports }}"
        wait: yes
        wait_timeout: 200
      delegate_to: localhost

    - name: Check app already installed     
      stat: 
        path: /app/app/
      become: yes
      register: app_dir    

    - name: Remove existing app
      include_role: 
        name: app
        tasks_from: remove_app
      when:
        - app_dir.stat.exists 

    - name: Install the app
      include_role: 
        name: app
        tasks_from: install_app

    - name: Add {{ ec2_id }} to Target Group
      elb_target_group:
        name: "{{ ec2_lb_target }}"
        protocol: http
        port: 80
        vpc_id: "{{ ec2_vpc }}"
        region:  "{{ ec2_region }}"
        modify_targets: Yes
        state: present
        target_type: instance
        targets: "{{ all_ids_and_ports }}"
        wait: yes
        wait_timeout: 200
      delegate_to: localhost




